?var
?group
# Paquetes
library(ggplot2)
library(dplyr)
library(readr)
library(tidyr)
library(here)
datos <- read_delim(here("data", "futbol.txt"), "\t")
summary(datos)
datos <- read_delim("~/gdrive/Facultad/ADE_Maestria/2020/data/futbol.txt", "\t")
source("~/gdrive/Facultad/ADE_Maestria/2020/funciones/01_funciones_univ_ggplot.R")
gg_sl2 <- function(df, vble, group, jitterwidth = 0.1, jitteralpha = 0.5,
linecol = "red", ylabel = expression(sqrt(abs( " Residuos ")))) {
vble <- enquo(vble)
group <- enquo(group)
# check vble is numeric and group character
# vble <- eval(substitute(vble), df)
# group <- eval(substitute(group), df)
# df1 <- tibble(group, vble)
# Calcular mediana y residuos
df1 <-
df %>%
group_by(!! group) %>%
mutate(
mna = median(!! vble),
mna_res = sqrt(abs(!! vble - mna))
)
# Preparar otro data set para unir las medianas de los residuos
datos_linea <-
df1 %>%
group_by(!! group) %>%
summarise(x = median(!! vble), y = median(mna_res))
# Gr치fico s-l
g <- ggplot(df1, aes(x = mna, y = mna_res, color = group)) +
geom_jitter(alpha = jitteralpha, width = jitterwidth, height = 0) +
geom_line(data = datos_linea, aes(x = x, y = y), col = linecol) +
ylab(ylabel)
return(g)
}
source("~/gdrive/Facultad/ADE_Maestria/2020/funciones/01_funciones_univ_ggplot.R")
gg_sl(datos, time, nv.vv) +
xlab("Mediana de tiempo jittered (seg)")
datos <- read_delim("~/gdrive/Facultad/ADE_Maestria/2020/data/fusion.txt", "\t")
gg_sl(datos, time, nv.vv) +
xlab("Mediana de tiempo jittered (seg)")
gg_sl2 <- function(df, vble, group, jitterwidth = 0.1, jitteralpha = 0.5,
linecol = "red", ylabel = expression(sqrt(abs( " Residuos ")))) {
vble <- enquo(vble)
group <- enquo(group)
# check vble is numeric and group character
# vble <- eval(substitute(vble), df)
# group <- eval(substitute(group), df)
# df1 <- tibble(group, vble)
# Calcular mediana y residuos
df1 <-
df %>%
group_by(!! group) %>%
mutate(
mna = median(!! vble),
mna_res = sqrt(abs(!! vble - mna))
)
# Preparar otro data set para unir las medianas de los residuos
datos_linea <-
df1 %>%
group_by(!! group) %>%
summarise(x = median(!! vble), y = median(mna_res))
# Gr치fico s-l
g <- ggplot(df1, aes(x = mna, y = mna_res, color = group)) +
geom_jitter(alpha = jitteralpha, width = jitterwidth, height = 0) +
geom_line(data = datos_linea, aes(x = x, y = y), col = linecol) +
ylab(ylabel)
return(g)
}
gg_sl(datos, time, nv.vv)
gg_sl(datos, time, nv.vv) +
scale_color_discrete("tipo")
gg_sl2(datos, time, nv.vv)
gg_sl2 <- function(df, vble, group, jitterwidth = 0.1, jitteralpha = 0.5,
linecol = "red", ylabel = expression(sqrt(abs( " Residuos ")))) {
vble <- enquo(vble)
group <- enquo(group)
# check vble is numeric and group character
# vble <- eval(substitute(vble), df)
# group <- eval(substitute(group), df)
# df1 <- tibble(group, vble)
# Calcular mediana y residuos
df1 <-
df %>%
group_by(!! group) %>%
mutate(
mna = median(!! vble),
mna_res = sqrt(abs(!! vble - mna))
)
# Preparar otro data set para unir las medianas de los residuos
datos_linea <-
df1 %>%
group_by(!! group) %>%
summarise(x = median(!! vble), y = median(mna_res))
# Gr치fico s-l
g <- ggplot(df1, aes(x = mna, y = mna_res, color = !! group)) +
geom_jitter(alpha = jitteralpha, width = jitterwidth, height = 0) +
geom_line(data = datos_linea, aes(x = x, y = y), col = linecol) +
ylab(ylabel)
return(g)
}
gg_sl2(datos, time, nv.vv)
gg_sl(datos, time, nv.vv) +
xlab("Mediana de tiempo jittered (seg)")
gg_sl2(datos, time, nv.vv)
gg_sl2(datos, time, nv.vv) +
scale_color_discrete("tipo")
gg_sl(datos, time, nv.vv) +
xlab("Mediana de tiempo jittered (seg)")
gg_sl2(datos, time, nv.vv)
gg_sl2(datos, time, nv.vv, jitterwidth = 0.4, linecol = "blue", ylabel = "hola", jitteralpha = 1) +
scale_color_discrete("tipo")
gg_sl2 <- function(df, vble, group,
jitterwidth = 0.1, jitteralpha = 0.5, linecol = "red",
ylabel = expression(sqrt(abs( " Residuos ")))) {
# NSE
vble <- enquo(vble)
group <- enquo(group)
# Calcular mediana y residuos
df1 <-
df %>%
group_by(!!group) %>%
mutate(
mna = median(!!vble),
mna_res = sqrt(abs(!!vble - mna))
)
# Preparar otro data set para unir las medianas de los residuos
datos_linea <-
df1 %>%
group_by(!!group) %>%
summarise(x = median(!!vble), y = median(mna_res))
# Gr치fico s-l
g <- ggplot(df1, aes(x = mna, y = mna_res, color = !!group)) +
geom_jitter(alpha = jitteralpha, width = jitterwidth, height = 0) +
geom_line(data = datos_linea, aes(x = x, y = y), col = linecol) +
ylab(ylabel)
return(g)
}
gg_sl2(datos, time, nv.vv, jitterwidth = 0.4, linecol = "blue", ylabel = "hola", jitteralpha = 1) +
scale_color_discrete("tipo")
use_this::use_data(datos)
usethis::use_data(datos)
fusion <- datos
usethis::use_data(fusion)
devtools::load_all(".")
warnings()
devtools::load_all(".")
data("fusion")
gg_sl(datos, time, nv.vv) +
xlab("Mediana de tiempo jittered (seg)")
gg_sl(fusion, time, nv.vv) +
xlab("Mediana de tiempo jittered (seg)")
theme_set(theme_bw())
gg_sl(fusion, time, nv.vv) +
xlab("Mediana de tiempo jittered (seg)")
futbol <- read_delim("~/gdrive/Facultad/ADE_Maestria/2020/data/futbol.txt", "\t")
usethis::use_data(futbol)
summarise(futbol, mean(hola))
gg_sl(datos, time, nv.vv) +
xlab("Mediana de tiempo jittered (seg)")
datos <- read_delim("~/gdrive/Facultad/ADE_Maestria/2020/data/fusion.txt", "\t")
gg_sl(datos, time, nv.vv) +
xlab("Mediana de tiempo jittered (seg)")
gg_sl(datos, time, nv.v) +
xlab("Mediana de tiempo jittered (seg)")
pull(futbol, dist)
devtools::load_all(".")
gg_cuantiles(datos, "dist", "longp")
source("~/gdrive/Facultad/ADE_Maestria/2020/funciones/01_funciones_univ_ggplot.R")
gg_cuantiles(datos, "dist", "longp")
gg_cuantiles(futbol, "dist", "longp")
gg_quantiles(futbol, dist, longp)
devtools::load_all(".")
gg_quantiles(futbol, dist, longp)
devtools::load_all(".")
gg_quantiles(futbol, dist, longp)
theme_set(theme_bw() + theme(panel.spacing = unit(0, "lines")))
gg_quantiles(futbol, dist, longp)
gg_quantiles(futbol, dist, longp, size = 0.4, color = "red", shape = 3)
futbol %>%
filter(longp %in% c("< 0.81 m", "0.81 a 0.90 m")) %>%
gg_cuantiles("dist", "longp")
futbol %>%
filter(longp %in% c("< 0.81 m", "0.81 a 0.90 m")) %>%
gg_quantiles("dist", "longp")
gg_quantiles(futbol, dist, longp, combined = T)
rlang::last_error()
devtools::load_all(".")
gg_quantiles(futbol, dist, longp, combined = T)
devtools::load_all(".")
gg_quantiles(futbol, dist, longp, combined = T)
devtools::load_all(".")
gg_quantiles(futbol, dist, longp, combined = T)
gg_cuantiles(futbol, "dist", "longp", combinado = T)
# cuantiles solo 2 grupos
futbol2 <- filter(futbol, longp %in% c("< 0.81 m", "0.81 a 0.90 m"))
gg_cuantiles(futbol2, "dist", "longp")
gg_quantiles(futbol2, dist, longp)
gg_quantiles(futbol2, dist, longp2)
