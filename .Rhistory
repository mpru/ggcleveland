g <- g + facet_wrap(~ tau, scales = "free_y", nrow = nrow)
} else {
g <- g + facet_wrap(groups ~ tau, scales = "free_y", nrow = 2)
}
return(g)
}
gg_pt(filter(datos, nv.vv == "VV"), time)
gg_pt <- function(df, vble, group = NULL,
taus = c(-1, -.5, -.25, 0, .25, .5, 1),
xlabel = "Normal quantiles",
ylabel = paste("Transformed", quo_text(vble)),
nrow = 2,...) {
# Agregar controles
# NSE
vble <- enquo(vble)
group <- enquo(group)
# # Identificar los grupos
# if (!is.null(group)) {
# 	grupos <- unique(pull(df, !!group))
# } else {
# 	grupos <- NULL
# }
# Transformar valores
datos_pot <-
sapply(taus, transf_pot, x = pull(df, !!vble)) %>%
as_tibble(.name_repair = ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE)) %>%
setNames(taus)
if (is.null(group)) {
datos_pot <- pivot_longer(datos_pot, cols = everything(), names_to = "tau", values_to = "y")
} else {
datos_pot <-
datos_pot %>%
mutate(groups = pull(df, !!group)) #%>%
# pivot_longer(cols = -.data$groups, names_to = "tau", values_to = "y")
cat("hasta aca bien")
}
# Graficar
g <- ggplot(datos_pot, aes(sample = y)) +
stat_qq(...) +
stat_qq_line() +
xlab(xlabel) + ylab(ylabel)
if (is.null(group)) {
g <- g + facet_wrap(~ tau, scales = "free_y", nrow = nrow)
} else {
g <- g + facet_wrap(groups ~ tau, scales = "free_y", nrow = 2)
}
return(g)
}
gg_pt(filter(datos, nv.vv == "VV"), time)
filter(datos, nv.vv == "VV")
is.null(group)
gg_pt <- function(df, vble, group = NULL,
taus = c(-1, -.5, -.25, 0, .25, .5, 1),
xlabel = "Normal quantiles",
ylabel = paste("Transformed", quo_text(vble)),
nrow = 2,...) {
# Agregar controles
# NSE
vble <- enquo(vble)
group <- enquo(group)
# # Identificar los grupos
# if (!is.null(group)) {
# 	grupos <- unique(pull(df, !!group))
# } else {
# 	grupos <- NULL
# }
# Transformar valores
datos_pot <-
sapply(taus, transf_pot, x = pull(df, !!vble)) %>%
as_tibble(.name_repair = ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE)) %>%
setNames(taus)
if (is.null(group)) {
datos_pot <- pivot_longer(datos_pot, cols = everything(), names_to = "tau", values_to = "y")
} else {
cat("entro\n")
datos_pot <-
datos_pot %>%
mutate(groups = pull(df, !!group)) #%>%
# pivot_longer(cols = -.data$groups, names_to = "tau", values_to = "y")
cat("hasta aca bien")
}
# Graficar
g <- ggplot(datos_pot, aes(sample = y)) +
stat_qq(...) +
stat_qq_line() +
xlab(xlabel) + ylab(ylabel)
if (is.null(group)) {
g <- g + facet_wrap(~ tau, scales = "free_y", nrow = nrow)
} else {
g <- g + facet_wrap(groups ~ tau, scales = "free_y", nrow = 2)
}
return(g)
}
gg_pt(filter(datos, nv.vv == "VV"), time)
gg_pt <- function(df, vble, group = NULL,
taus = c(-1, -.5, -.25, 0, .25, .5, 1),
xlabel = "Normal quantiles",
ylabel = paste("Transformed", quo_text(vble)),
nrow = 2,...) {
# Agregar controles
# NSE
vble <- enquo(vble)
if(!is.null(group)) group <- enquo(group)
# # Identificar los grupos
# if (!is.null(group)) {
# 	grupos <- unique(pull(df, !!group))
# } else {
# 	grupos <- NULL
# }
# Transformar valores
datos_pot <-
sapply(taus, transf_pot, x = pull(df, !!vble)) %>%
as_tibble(.name_repair = ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE)) %>%
setNames(taus)
if (is.null(group)) {
datos_pot <- pivot_longer(datos_pot, cols = everything(), names_to = "tau", values_to = "y")
} else {
# cat("entro\n")
datos_pot <-
datos_pot %>%
mutate(groups = pull(df, !!group)) #%>%
pivot_longer(cols = -.data$groups, names_to = "tau", values_to = "y")
# cat("hasta aca bien")
}
# Graficar
g <- ggplot(datos_pot, aes(sample = y)) +
stat_qq(...) +
stat_qq_line() +
xlab(xlabel) + ylab(ylabel)
if (is.null(group)) {
g <- g + facet_wrap(~ tau, scales = "free_y", nrow = nrow)
} else {
g <- g + facet_wrap(groups ~ tau, scales = "free_y", nrow = 2)
}
return(g)
}
gg_pt(filter(datos, nv.vv == "VV"), time)
# Grafico
ggplot(datos_pot, aes(sample = y)) +
stat_qq() +
stat_qq_line() +
facet_wrap(~ tau, scales = "free_y", nrow = 2) +
xlab("Cuantiles normales") + ylab("Tiempo VV transformado")
gg_pt(filter(datos, nv.vv == "VV"), time, taus = c(-0.25, -0.5, -1, 0, 0.25), xlabel = "Cuantiles normales", ylabel = "Valores transformados", nrow = 3, color = "red")
gg_pt(datos, time)
gg_pt(datos, time, nv.vv)
gg_pt(datos, time, nv.vv)
gg_pt(datos, time)
gg_pt(datos, time, group = nv.vv)
gg_pt <- function(df, vble, group = NULL,
taus = c(-1, -.5, -.25, 0, .25, .5, 1),
xlabel = "Normal quantiles",
ylabel = paste("Transformed", quo_text(vble)),
nrow = 2,...) {
# Agregar controles
# NSE
vble <- enquo(vble)
if(!is.null(group)) group <- enquo(group)
# # Identificar los grupos
# if (!is.null(group)) {
# 	grupos <- unique(pull(df, !!group))
# } else {
# 	grupos <- NULL
# }
cat("entro1\n")
# Transformar valores
datos_pot <-
sapply(taus, transf_pot, x = pull(df, !!vble)) %>%
as_tibble(.name_repair = ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE)) %>%
setNames(taus)
if (is.null(group)) {
cat("entro2\n")
datos_pot <- pivot_longer(datos_pot, cols = everything(), names_to = "tau", values_to = "y")
} else {
cat("entro3\n")
datos_pot <-
datos_pot %>%
mutate(groups = pull(df, !!group)) #%>%
pivot_longer(cols = -.data$groups, names_to = "tau", values_to = "y")
# cat("hasta aca bien")
}
cat("entro4\n")
# Graficar
g <- ggplot(datos_pot, aes(sample = y)) +
stat_qq(...) +
stat_qq_line() +
xlab(xlabel) + ylab(ylabel)
if (is.null(group)) {
g <- g + facet_wrap(~ tau, scales = "free_y", nrow = nrow)
} else {
g <- g + facet_wrap(groups ~ tau, scales = "free_y", nrow = 2)
}
return(g)
}
gg_pt(datos, time, nv.vv)
gg_pt <- function(df, vble, group = NULL,
taus = c(-1, -.5, -.25, 0, .25, .5, 1),
xlabel = "Normal quantiles",
ylabel = paste("Transformed", quo_text(vble)),
nrow = 2,...) {
# Agregar controles
cat("entro0\n")
# NSE
vble <- enquo(vble)
if(!is.null(group)) group <- enquo(group)
# # Identificar los grupos
# if (!is.null(group)) {
# 	grupos <- unique(pull(df, !!group))
# } else {
# 	grupos <- NULL
# }
cat("entro1\n")
# Transformar valores
datos_pot <-
sapply(taus, transf_pot, x = pull(df, !!vble)) %>%
as_tibble(.name_repair = ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE)) %>%
setNames(taus)
if (is.null(group)) {
cat("entro2\n")
datos_pot <- pivot_longer(datos_pot, cols = everything(), names_to = "tau", values_to = "y")
} else {
cat("entro3\n")
datos_pot <-
datos_pot %>%
mutate(groups = pull(df, !!group)) #%>%
pivot_longer(cols = -.data$groups, names_to = "tau", values_to = "y")
# cat("hasta aca bien")
}
cat("entro4\n")
# Graficar
g <- ggplot(datos_pot, aes(sample = y)) +
stat_qq(...) +
stat_qq_line() +
xlab(xlabel) + ylab(ylabel)
if (is.null(group)) {
g <- g + facet_wrap(~ tau, scales = "free_y", nrow = nrow)
} else {
g <- g + facet_wrap(groups ~ tau, scales = "free_y", nrow = 2)
}
return(g)
}
gg_pt(datos, time, nv.vv)
gg_pt <- function(df, vble, group,
taus = c(-1, -.5, -.25, 0, .25, .5, 1),
xlabel = "Normal quantiles",
ylabel = paste("Transformed", quo_text(vble)),
nrow = 2,...) {
# Agregar controles
cat("entro0\n")
# NSE
vble <- enquo(vble)
if(!is.null(group)) group <- enquo(group)
# # Identificar los grupos
# if (!is.null(group)) {
# 	grupos <- unique(pull(df, !!group))
# } else {
# 	grupos <- NULL
# }
cat("entro1\n")
# Transformar valores
datos_pot <-
sapply(taus, transf_pot, x = pull(df, !!vble)) %>%
as_tibble(.name_repair = ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE)) %>%
setNames(taus)
if (is.null(group)) {
cat("entro2\n")
datos_pot <- pivot_longer(datos_pot, cols = everything(), names_to = "tau", values_to = "y")
} else {
cat("entro3\n")
datos_pot <-
datos_pot %>%
mutate(groups = pull(df, !!group)) #%>%
pivot_longer(cols = -.data$groups, names_to = "tau", values_to = "y")
# cat("hasta aca bien")
}
cat("entro4\n")
# Graficar
g <- ggplot(datos_pot, aes(sample = y)) +
stat_qq(...) +
stat_qq_line() +
xlab(xlabel) + ylab(ylabel)
if (is.null(group)) {
g <- g + facet_wrap(~ tau, scales = "free_y", nrow = nrow)
} else {
g <- g + facet_wrap(groups ~ tau, scales = "free_y", nrow = 2)
}
return(g)
}
gg_pt(datos, time, nv.vv)
enquo(NULL)
gg_pt <- function(df, vble, group = NULL,
taus = c(-1, -.5, -.25, 0, .25, .5, 1),
xlabel = "Normal quantiles",
ylabel = paste("Transformed", quo_text(vble)),
nrow = 2,...) {
# Agregar controles
cat("entro0\n")
# NSE
vble <- enquo(vble)
group <- enquo(group)
print(group)
# if(!is.null(group)) group <- enquo(group)
# # Identificar los grupos
# if (!is.null(group)) {
# 	grupos <- unique(pull(df, !!group))
# } else {
# 	grupos <- NULL
# }
cat("entro1\n")
# Transformar valores
datos_pot <-
sapply(taus, transf_pot, x = pull(df, !!vble)) %>%
as_tibble(.name_repair = ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE)) %>%
setNames(taus)
if (is.null(group)) {
cat("entro2\n")
datos_pot <- pivot_longer(datos_pot, cols = everything(), names_to = "tau", values_to = "y")
} else {
cat("entro3\n")
datos_pot <-
datos_pot %>%
mutate(groups = pull(df, !!group)) #%>%
pivot_longer(cols = -.data$groups, names_to = "tau", values_to = "y")
# cat("hasta aca bien")
}
cat("entro4\n")
# Graficar
g <- ggplot(datos_pot, aes(sample = y)) +
stat_qq(...) +
stat_qq_line() +
xlab(xlabel) + ylab(ylabel)
if (is.null(group)) {
g <- g + facet_wrap(~ tau, scales = "free_y", nrow = nrow)
} else {
g <- g + facet_wrap(groups ~ tau, scales = "free_y", nrow = 2)
}
return(g)
}
gg_pt(datos, time, nv.vv)
gg_pt <- function(df, vble, group = NULL,
taus = c(-1, -.5, -.25, 0, .25, .5, 1),
xlabel = "Normal quantiles",
ylabel = paste("Transformed", quo_text(vble)),
nrow = 2,...) {
# Agregar controles
cat("entro0\n")
# NSE
vble <- enquo(vble)
group <- enquo(group)
print(vble)
print(group)
# if(!is.null(group)) group <- enquo(group)
# # Identificar los grupos
# if (!is.null(group)) {
# 	grupos <- unique(pull(df, !!group))
# } else {
# 	grupos <- NULL
# }
cat("entro1\n")
# Transformar valores
datos_pot <-
sapply(taus, transf_pot, x = pull(df, !!vble)) %>%
as_tibble(.name_repair = ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE)) %>%
setNames(taus)
if (is.null(group)) {
cat("entro2\n")
datos_pot <- pivot_longer(datos_pot, cols = everything(), names_to = "tau", values_to = "y")
} else {
cat("entro3\n")
datos_pot <-
datos_pot %>%
mutate(groups = pull(df, !!group)) #%>%
pivot_longer(cols = -.data$groups, names_to = "tau", values_to = "y")
# cat("hasta aca bien")
}
cat("entro4\n")
# Graficar
g <- ggplot(datos_pot, aes(sample = y)) +
stat_qq(...) +
stat_qq_line() +
xlab(xlabel) + ylab(ylabel)
if (is.null(group)) {
g <- g + facet_wrap(~ tau, scales = "free_y", nrow = nrow)
} else {
g <- g + facet_wrap(groups ~ tau, scales = "free_y", nrow = 2)
}
return(g)
}
gg_pt(datos, time, nv.vv)
gg_pt(datos, time)
gg_pt <- function(df, vble, group = NULL,
taus = c(-1, -.5, -.25, 0, .25, .5, 1),
xlabel = "Normal quantiles",
ylabel = paste("Transformed", quo_text(vble)),
nrow = 2,...) {
# Agregar controles
# NSE
vble <- enquo(vble)
group <- enquo(group)
# Transformar valores
datos_pot <-
sapply(taus, transf_pot, x = pull(df, !!vble)) %>%
as_tibble(.name_repair = ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE)) %>%
setNames(taus)
if (quo_is_null(group)) {
datos_pot <- pivot_longer(datos_pot, cols = everything(), names_to = "tau", values_to = "y")
} else {
datos_pot <-
datos_pot %>%
mutate(groups = pull(df, !!group)) #%>%
pivot_longer(cols = -.data$groups, names_to = "tau", values_to = "y")
}
# Graficar
g <- ggplot(datos_pot, aes(sample = y)) +
stat_qq(...) +
stat_qq_line() +
xlab(xlabel) + ylab(ylabel)
if (quo_is_null(group)) {
g <- g + facet_wrap(~ tau, scales = "free_y", nrow = nrow)
} else {
g <- g + facet_wrap(groups ~ tau, scales = "free_y", nrow = 2)
}
return(g)
}
gg_pt(filter(datos, nv.vv == "VV"), time)
gg_pt(filter(datos, nv.vv == "VV"), time, taus = c(-0.25, -0.5, -1, 0, 0.25), xlabel = "Cuantiles normales", ylabel = "Valores transformados", nrow = 3, color = "red")
gg_pt(datos, time, group = nv.vv)
gg_pt <- function(df, vble, group = NULL,
taus = c(-1, -.5, -.25, 0, .25, .5, 1),
xlabel = "Normal quantiles",
ylabel = paste("Transformed", quo_text(vble)),
nrow = 2,...) {
# Agregar controles
# NSE
vble <- enquo(vble)
group <- enquo(group)
# Transformar valores
datos_pot <-
sapply(taus, transf_pot, x = pull(df, !!vble)) %>%
as_tibble(.name_repair = ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE)) %>%
setNames(taus)
if (quo_is_null(group)) {
datos_pot <- pivot_longer(datos_pot, cols = everything(), names_to = "tau", values_to = "y")
} else {
datos_pot <-
datos_pot %>%
mutate(groups = pull(df, !!group)) #%>%
pivot_longer(cols = -starts_with("groups"), names_to = "tau", values_to = "y")
}
# Graficar
g <- ggplot(datos_pot, aes(sample = y)) +
stat_qq(...) +
stat_qq_line() +
xlab(xlabel) + ylab(ylabel)
if (quo_is_null(group)) {
g <- g + facet_wrap(~ tau, scales = "free_y", nrow = nrow)
} else {
g <- g + facet_wrap(groups ~ tau, scales = "free_y", nrow = 2)
}
return(g)
}
gg_pt(datos, time, nv.vv)
gg_pt <- function(df, vble, group = NULL,
taus = c(-1, -.5, -.25, 0, .25, .5, 1),
xlabel = "Normal quantiles",
ylabel = paste("Transformed", quo_text(vble)),
nrow = 2,...) {
# Agregar controles
# NSE
vble <- enquo(vble)
group <- enquo(group)
# Transformar valores
datos_pot <-
sapply(taus, transf_pot, x = pull(df, !!vble)) %>%
as_tibble(.name_repair = ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE)) %>%
setNames(taus)
if (quo_is_null(group)) {
datos_pot <- pivot_longer(datos_pot, cols = everything(), names_to = "tau", values_to = "y")
} else {
datos_pot <-
datos_pot %>%
mutate(groups = pull(df, !!group)) %>%
pivot_longer(cols = -starts_with("groups"), names_to = "tau", values_to = "y")
}
# Graficar
g <- ggplot(datos_pot, aes(sample = y)) +
stat_qq(...) +
stat_qq_line() +
xlab(xlabel) + ylab(ylabel)
if (quo_is_null(group)) {
g <- g + facet_wrap(~ tau, scales = "free_y", nrow = nrow)
} else {
g <- g + facet_wrap(groups ~ tau, scales = "free_y", nrow = 2)
}
return(g)
}
gg_pt(datos, time, nv.vv)
gg_pt(datos, time, nv.vv, taus = c(-0.25, -0.5, -1, 0, 0.25), xlabel = "Cuantiles normales", ylabel = "Valores transformados", nrow = 3, color = "red")
devtools::load_all(".")
# Power transform
datos <- fusion
gg_pt(filter(datos, nv.vv == "VV"), time)
gg_pt(filter(datos, nv.vv == "VV"), time, taus = c(-0.25, -0.5, -1, 0, 0.25), xlabel = "Cuantiles normales", ylabel = "Valores transformados", nrow = 3, color = "red")
gg_pt(datos, time, nv.vv)
gg_pt(datos, time, nv.vv, taus = c(-0.25, -0.5, -1, 0, 0.25), xlabel = "Cuantiles normales", ylabel = "Valores transformados", nrow = 3, color = "red")
data(fusion)
filter(fusion, nv.vv == "VV")
View(fusion)
devtools::load_all(".")
gg_pt(filter(fusion, nv.vv == "VV"), time)
gg_pt(datos, time, nv.vv)
100%%24
